buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.github.fvarrui:javapackager:1.7.4'
    }
}

plugins {
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.github.NIThree.AquariumLauncher.Main'
        )
    }
}

apply plugin: 'org.openjfx.javafxplugin'
apply plugin: 'io.github.fvarrui.javapackager.plugin'

group 'com.github.NIThree'
version '1.0.0'

repositories {
    mavenCentral()
    maven {
        url = 'https://jitpack.io/'
        name = 'JitPack'
    }
    maven {
        url = 'https://litarvan.github.io/maven'
        name = 'LitarvanMaven'
    }
}

dependencies {
    implementation 'fr.litarvan:openauth:1.1.6'
    implementation 'fr.flowarg:materialdesignfontfx:7.2.96-2'

    implementation 'fr.flowarg:flowupdater:1.8+'
    implementation 'fr.flowarg:openlauncherlib:3+'

    implementation 'com.github.goxr3plus:FX-BorderlessScene:4+'
    implementation 'com.github.oshi:oshi-core:5+'

    implementation 'org.json:json:20231013'
}

javafx {
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing']
}

application {
    getMainClass().set('com.github.NIThree.Aquarium.Main')
}

compileJava {
    options.encoding = "UTF-8"
}

task packageMyApp(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
    mainClass = 'com.github.NIThree.AquariumLauncher.Main'
    bundleJre = true
    generateInstaller = true
    platform = io.github.fvarrui.javapackager.model.Platform.windows
    createZipball = true
    jrePath = file('C:\\Program Files\\Eclipse Adoptium\\jdk-17.0.5.8-hotspot')
    appName = displayName = 'Aquarium Launcher'
    organizationName = 'Syphael'

    winConfig {
        internalName = productName = 'Aquarium Launcher'
        generateMsi = true
        generateMsm = false
        generateSetup = true
        companyName = 'Syphael'
        productVersion = project.version
        language = 'FRENCH'
        icoFile = file('logo.ico')
        setupLanguages.put('French', 'compiler:Languages\\French.isl')
    }
}